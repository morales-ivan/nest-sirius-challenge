{
    "name": "nest-sirius-challenge",
    "version": "0.0.1",
    "description": "",
    "author": "",
    "private": true,
    "license": "UNLICENSED",
    "scripts": {
        "prisma:deploy:local": "dotenv -e config/env/local.env -- prisma migrate deploy",
        "prisma:deploy:test": "dotenv -e config/env/test.env -- prisma migrate deploy",
        "prisma:deploy:prod": "dotenv -e dist/config/env/production.env -- prisma migrate deploy",
        "prebuild": "rimraf dist",
        "build:app": "nest build",
        "start": "nest start",
        "start:watch": "nest start --watch",
        "start:dev": "cross-env NODE_ENV=local nest start --watch",
        "start:debug": "cross-env NODE_ENV=local nest start --debug --watch",
        "start:prod": "NODE_ENV=production node dist/src/main",
        "docker:start:local": "docker compose --env-file config/env/local-docker.env up",
        "docker:start:local:fresh": "yarn docker:db:dev:restart && docker compose --env-file config/env/local-docker.env up main --force-recreate --build",
        "docker:start:local:load": "docker compose --profile init --env-file config/env/local-docker.env up --build",
        "docker:start:local:rebuild": "yarn docker:start:local --build",
        "docker:db:dev:rm": "docker compose --env-file config/env/local-docker.env rm db -v -f",
        "docker:db:dev:up": "docker compose --env-file config/env/local-docker.env up db -d",
        "docker:db:dev:restart": "yarn docker:db:dev:rm && yarn docker:db:dev:up && sleep 5 && yarn prisma:deploy:local",
        "docker:db:test:rm": "docker compose --env-file config/env/test.env -f docker-compose.testdb.yml rm test-db -v",
        "docker:db:test:up": "docker compose --env-file config/env/test.env -f docker-compose.testdb.yml up test-db -d",
        "docker:db:test:restart": "yarn docker:db:test:rm && yarn docker:db:test:up && sleep 1 && yarn prisma:deploy:test",
        "docker:image:build": "dotenv -e config/env/production.env -- docker build -t nest-challenge:latest .",
        "docker:clean:compose": "docker compose  --env-file config/env/local-docker.env down -v --remove-orphans",
        "docker:clean:containers": "docker container prune -f",
        "docker:clean:images": "docker image prune -f",
        "docker:clean:volumes": "docker volume prune -f",
        "docker:clean:networks": "docker network prune -f",
        "docker:clean":  "yarn docker:clean:compose && yarn docker:clean:containers && yarn docker:clean:images && yarn docker:clean:volumes && yarn docker:clean:networks",
        "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
        "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
        "test": "jest",
        "test:watch": "jest --watch",
        "test:cov": "jest --coverage",
        "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
        "pretest:e2e": "yarn docker:database:test:restart",
        "test:e2e": "cross-env NODE_ENV=test jest --watch --no-cache --config ./test/jest-e2e.json"
    },
    "dependencies": {
        "@nestjs/common": "^9.0.0",
        "@nestjs/config": "^2.2.0",
        "@nestjs/core": "^9.0.0",
        "@nestjs/jwt": "^9.0.0",
        "@nestjs/passport": "^9.0.0",
        "@nestjs/platform-express": "^9.0.0",
        "@nestjs/swagger": "^6.1.2",
        "@prisma/client": "^4.2.1",
        "@sendgrid/mail": "^7.7.0",
        "argon2": "^0.29.1",
        "class-transformer": "^0.5.1",
        "class-validator": "^0.13.2",
        "dotenv-cli": "^6.0.0",
        "form-data": "^4.0.0",
        "mailgun.js": "^8.0.1",
        "passport": "^0.6.0",
        "passport-jwt": "^4.0.0",
        "reflect-metadata": "^0.1.13",
        "rimraf": "^3.0.2",
        "rxjs": "^7.2.0",
        "ts-mailgun": "^0.5.1"
    },
    "devDependencies": {
        "@nestjs/cli": "^9.0.0",
        "@nestjs/schematics": "^9.0.0",
        "@nestjs/testing": "^9.0.0",
        "@types/express": "^4.17.13",
        "@types/jest": "28.1.4",
        "@types/node": "^16.0.0",
        "@types/supertest": "^2.0.11",
        "@typescript-eslint/eslint-plugin": "^5.0.0",
        "@typescript-eslint/parser": "^5.0.0",
        "cross-env": "^7.0.3",
        "eslint": "8.22.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-plugin-prettier": "^4.0.0",
        "jest": "28.1.2",
        "joi": "^17.6.2",
        "pactum": "^3.2.2",
        "prettier": "^2.3.2",
        "prisma": "^4.2.1",
        "source-map-support": "^0.5.20",
        "supertest": "^6.1.3",
        "ts-jest": "28.0.5",
        "ts-loader": "^9.2.3",
        "ts-node": "^10.0.0",
        "tsconfig-paths": "4.0.0",
        "typescript": "^4.3.5"
    },
    "jest": {
        "moduleFileExtensions": [
            "js",
            "json",
            "ts"
        ],
        "rootDir": "src",
        "testRegex": ".*\\.spec\\.ts$",
        "transform": {
            "^.+\\.(t|j)s$": "ts-jest"
        },
        "collectCoverageFrom": [
            "**/*.(t|j)s"
        ],
        "coverageDirectory": "../coverage",
        "testEnvironment": "node"
    }
}
